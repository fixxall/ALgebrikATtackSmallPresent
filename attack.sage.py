

# This file was *autogenerated* from the file attack.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_2 = Integer(2); _sage_const_4 = Integer(4); _sage_const_6 = Integer(6); _sage_const_1 = Integer(1); _sage_const_3 = Integer(3); _sage_const_5 = Integer(5); _sage_const_7 = Integer(7); _sage_const_8 = Integer(8)
Pbox = [_sage_const_0 ,_sage_const_2 ,_sage_const_4 ,_sage_const_6 ,_sage_const_1 ,_sage_const_3 ,_sage_const_5 ,_sage_const_7 ]
P = PolynomialRing(GF(_sage_const_2 ), names=('k0', 'k1', 'k2', 'k3', 'k4', 'k5', 'k6', 'k7', 'k19', 'k20', 'k21', 'k22', 'k23', 'k24', 'k25', 'k26', 'k38', 'k39', 'k40', 'k41', 'k42', 'k43', 'k44', 'k45',)); (k0, k1, k2, k3, k4, k5, k6, k7, k19, k20, k21, k22, k23, k24, k25, k26, k38, k39, k40, k41, k42, k43, k44, k45,) = P._first_ngens(24)

PLaintext = [_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ]


def phiSbox1(x1,x2,x3,x4):
    return _sage_const_1 +x1+x3+x4+x2*x3+x1*x2*x4+x1*x3*x4+x2*x3*x4

def phiSbox2(x1,x2,x3,x4):
    return _sage_const_1 +x1+x2+x1*x3+x1*x4+x3*x4+x1*x2*x4+x1*x3*x4

def phiSbox3(x1,x2,x3,x4):
    return x1+x3+x1*x2+x1*x3+x1*x2*x4+x1*x3*x4+x2*x3*x4

def phiSbox4(x1,x2,x3,x4):
    return x1+x2+x4+x2*x3

def pLayer(arr):
    ret = [_ for _ in arr]
    for i in range(len(Pbox)):
        ret[Pbox[i]] = arr[i]
    return ret

def writeOutput(file, arr):
    with open(file, "w") as f:
        for i in arr:
            f.write(str(i)+"\n")
    print("done save make file as", file)


K = [k7,k6,k5,k4,k3,k2,k1,k0]

Rk = [K[i]+PLaintext[i] for i in range(_sage_const_8 )]

writeOutput("Rk.txt", Rk)
print("Rk[0]:",Rk[_sage_const_0 ])

g1 = [
    phiSbox1(Rk[_sage_const_0 ], Rk[_sage_const_1 ], Rk[_sage_const_2 ], Rk[_sage_const_3 ]),
    phiSbox2(Rk[_sage_const_0 ], Rk[_sage_const_1 ], Rk[_sage_const_2 ], Rk[_sage_const_3 ]),
    phiSbox3(Rk[_sage_const_0 ], Rk[_sage_const_1 ], Rk[_sage_const_2 ], Rk[_sage_const_3 ]),
    phiSbox4(Rk[_sage_const_0 ], Rk[_sage_const_1 ], Rk[_sage_const_2 ], Rk[_sage_const_3 ]),
    phiSbox1(Rk[_sage_const_4 ], Rk[_sage_const_5 ], Rk[_sage_const_6 ], Rk[_sage_const_7 ]),
    phiSbox2(Rk[_sage_const_4 ], Rk[_sage_const_5 ], Rk[_sage_const_6 ], Rk[_sage_const_7 ]),
    phiSbox3(Rk[_sage_const_4 ], Rk[_sage_const_5 ], Rk[_sage_const_6 ], Rk[_sage_const_7 ]),
    phiSbox4(Rk[_sage_const_4 ], Rk[_sage_const_5 ], Rk[_sage_const_6 ], Rk[_sage_const_7 ]),
]



writeOutput("g1.txt", g1)
print("g1[0]:",g1[_sage_const_0 ])

h1 = pLayer(g1)

print("h1[6]:",h1[_sage_const_6 ])
writeOutput("h1.txt", h1)

f2 = [
    h1[_sage_const_0 ]+k26,
    h1[_sage_const_1 ]+k25,
    h1[_sage_const_2 ]+k24,
    h1[_sage_const_3 ]+k23,
    h1[_sage_const_4 ]+k22,
    h1[_sage_const_5 ]+k21,
    h1[_sage_const_6 ]+k20,
    h1[_sage_const_7 ]+k19,
]

print("f2[5]:",f2[_sage_const_5 ])
writeOutput("f2.txt", f2)

g2 = [
    phiSbox1(f2[_sage_const_0 ], f2[_sage_const_1 ], f2[_sage_const_2 ], f2[_sage_const_3 ]),
    phiSbox2(f2[_sage_const_0 ], f2[_sage_const_1 ], f2[_sage_const_2 ], f2[_sage_const_3 ]),
    phiSbox3(f2[_sage_const_0 ], f2[_sage_const_1 ], f2[_sage_const_2 ], f2[_sage_const_3 ]),
    phiSbox4(f2[_sage_const_0 ], f2[_sage_const_1 ], f2[_sage_const_2 ], f2[_sage_const_3 ]),
    phiSbox1(f2[_sage_const_4 ], f2[_sage_const_5 ], f2[_sage_const_6 ], f2[_sage_const_7 ]),
    phiSbox2(f2[_sage_const_4 ], f2[_sage_const_5 ], f2[_sage_const_6 ], f2[_sage_const_7 ]),
    phiSbox3(f2[_sage_const_4 ], f2[_sage_const_5 ], f2[_sage_const_6 ], f2[_sage_const_7 ]),
    phiSbox4(f2[_sage_const_4 ], f2[_sage_const_5 ], f2[_sage_const_6 ], f2[_sage_const_7 ]),
]

writeOutput("g2.txt", g2)

h2 = pLayer(g2)

print("h2[6]:",h2[_sage_const_6 ])
writeOutput("h2.txt", h2)

f3 = [
    h2[_sage_const_0 ]+k45,
    h2[_sage_const_1 ]+k44,
    h2[_sage_const_2 ]+k43,
    h2[_sage_const_3 ]+k42,
    h2[_sage_const_4 ]+k41,
    h2[_sage_const_5 ]+k40,
    h2[_sage_const_6 ]+k39,
    h2[_sage_const_7 ]+k38,
]

writeOutput("f3.txt", f3)

C = [_sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 ]
Ind = [f3[i]-C[_sage_const_0 ] for i in range(_sage_const_8 )]

print("Done for make an equation")
inp = input("wanna groebner basisi?[y/n]")
if(inp == "y"):
    I = ideal(Ind)
    gb = I.groebner_basis()
    print("DOnee!!")
    with open("grobner.txt","w") as f:
        for i in gb:
            f.write(str(i)+"\n")
else:
    print("done")

